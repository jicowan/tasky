# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Push a Docker image

on:
  push:
    branches: ['main']

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Kyverno CLI
        uses: kyverno/action-install-cli@v0.2.0
        with:
          release: 'v1.11.0'

      - name: Check install
        run: kyverno version
      
      - name: Test new resources against existing policies
        run: kyverno apply policies/ -r deploy/
        continue-on-error: true

      - name: Test pre-defined cases
        run: kyverno test tests/
        continue-on-error: true 

#      - name: Log in to Dockerhub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME}}" --password-stdin

      - name: Get and bump version
        id: bump_version
        run: | 
          git fetch --tags

          latest=$(git tag --sort=-v:refname | head -n1)
          if [ -z "$latest" ]; then
            latest="0.0.0"
          fi
          echo "Latest tag: $latest"

          latest=${latest#v}

          IFS='.' read -r major minor patch <<< "$latest"
          new_version="$major.$((minor+1)).0"

          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Create git tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag "v${{ steps.bump_version.outputs.new_version }}"
          git push origin "v${{ steps.bump_version.outputs.new_version }}"

      - name Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/tasky:${{ steps.bump_version.outputs.new_version }}
            ${{ steps.login-ecr.outputs.registry }}/tasky:latest
            
#      - name: Build and push images
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: jicowan/tasky:latest

      - name: Docker Scout
        id: docker-scout
        # if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          command: cves
#          image: jicowan/tasky:latest
          image: ${{ steps.login-ecr.outputs.registry }}/tasky:${{ steps.bump_version.outputs.new_version }}
          only-severities: critical,high
          exit-code: true

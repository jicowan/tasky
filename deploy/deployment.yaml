apiVersion: v1
kind: Secret
metadata:
  name: tasky-secrets
type: Opaque
data:
  mongodb-uri: bW9uZ29kYjovL2FkbWluOnBhc3N3b3JkQDEwLjAuMi42MzoyNzAxNw==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasky
  labels:
    app: tasky
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tasky
  template:
    metadata:
      labels:
        app: tasky
    spec:
      containers:
      - name: tasky
        image: jicowan/tasky:latest
        ports:
        - containerPort: 8080
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: tasky-secrets
              key: mongodb-uri
---
apiVersion: v1
kind: Service
metadata:
  name: tasky-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: tasky
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tasky-ingress
  annotations:
    kubernetes.io/ingressClassName: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/healthcheck-path: "/health"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: "tasky"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tasky-service
                port:
                  number: 80

